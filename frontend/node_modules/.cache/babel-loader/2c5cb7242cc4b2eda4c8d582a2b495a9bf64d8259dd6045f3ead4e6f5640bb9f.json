{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jeeva\\\\Desktop\\\\campus-chatbot\\\\frontend\\\\src\\\\components\\\\ChatBox.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ChatBox() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input) return;\n    const userMsg = {\n      sender: \"You\",\n      text: input\n    };\n    setMessages([...messages, userMsg]);\n\n    // Call backend API\n    const res = await fetch(\"http://localhost:8000/chat\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: \"user1\",\n        message: input\n      })\n    });\n    const data = await res.json();\n    setMessages(prev => [...prev, {\n      sender: \"Bot\",\n      text: data.response\n    }]);\n    setInput(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: \"400px\",\n        overflowY: \"scroll\",\n        border: \"1px solid #ccc\",\n        padding: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.sender === \"Bot\" ? \"left\" : \"right\",\n          margin: \"5px 0\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [msg.sender, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type your message...\",\n      style: {\n        width: \"80%\",\n        padding: \"5px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"5px 10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatBox, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","input","setInput","sendMessage","userMsg","sender","text","res","fetch","method","headers","body","JSON","stringify","user_id","message","data","json","prev","response","children","style","height","overflowY","border","padding","marginBottom","map","msg","i","textAlign","margin","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","width","onClick","_c","$RefreshReg$"],"sources":["C:/Users/jeeva/Desktop/campus-chatbot/frontend/src/components/ChatBox.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nexport default function ChatBox() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input) return;\r\n\r\n    const userMsg = { sender: \"You\", text: input };\r\n    setMessages([...messages, userMsg]);\r\n\r\n    // Call backend API\r\n    const res = await fetch(\"http://localhost:8000/chat\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ user_id: \"user1\", message: input })\r\n    });\r\n    const data = await res.json();\r\n\r\n    setMessages(prev => [...prev, { sender: \"Bot\", text: data.response }]);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ height: \"400px\", overflowY: \"scroll\", border: \"1px solid #ccc\", padding: \"10px\", marginBottom: \"10px\" }}>\r\n        {messages.map((msg, i) => (\r\n          <div key={i} style={{ textAlign: msg.sender === \"Bot\" ? \"left\" : \"right\", margin: \"5px 0\" }}>\r\n            <b>{msg.sender}:</b> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={e => setInput(e.target.value)}\r\n        placeholder=\"Type your message...\"\r\n        style={{ width: \"80%\", padding: \"5px\" }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"5px 10px\" }}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}